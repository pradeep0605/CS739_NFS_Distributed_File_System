// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.grpc.examples.helloworld";
option java_outer_classname = "HelloWorldProto";
option objc_class_prefix = "HLW";

package NFS_DFS;

service NFS_Server{
	rpc Ping(Integer) returns (Integer) {}
  rpc Lookup (LookupMessage) returns (FileHandle) {}
  rpc Read (ReadRequest) returns (ReadResponse) {}
  rpc Write (WriteRequest) returns (WriteResponse) {}
  rpc Write_Async (WriteRequest) returns (WriteResponse) {}
	rpc Fsync (FileHandle) returns (Integer);
  rpc Readdir (LookupMessage) returns (Buffer) {}
  rpc Getattr (LookupMessage) returns (Buffer) {}
  rpc CreateFile (FileCreateRequest) returns (Integer) {}
	rpc DeleteFile (LookupMessage) returns (Integer) {}
	rpc CreateDirectory (FileCreateRequest) returns (Integer) {}
	rpc DeleteDirectory (LookupMessage) returns (Integer) {}
	rpc RenameFile (RenameRequest) returns (Integer) {}
}

// The request message containing the user's name.
//  message HelloRequest {
//   string name = 1;
// }
// The response message containing the greetings
// message HelloReply {
//   string message = 1;
// }


message Integer {
	int32 data = 1;
}

message Buffer {
	int32 size = 1;
	bytes data = 2;
}

message LookupMessage {
	string path = 1;
}
message FileHandle {
	string path = 1;
	int32 mount_id = 2;
	bytes handle = 3;
}

message ReadRequest {
	FileHandle fh = 1;
	int32 offset = 2;
	int32 size = 3;
}

message ReadResponse {
	Buffer buff = 1;
	int32 actual_read_bytes = 2;
	int32 error_code = 3;
}

message WriteRequest {
	FileHandle fh = 1;
	int32 offset = 2;
	int32 size = 3;
	Buffer buff = 4;
}

message WriteResponse {
	int32 actual_bytes_written = 1;
	int32 error_code = 2;
}

message FileCreateRequest {
	string path = 1;
	int32 mode = 2;
}

message RenameRequest {
	string from_path = 1;
	string to_path = 2;
	int32	flags = 3;
}















